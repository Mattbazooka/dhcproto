///Valid Option Codes for ORO
///https://datatracker.ietf.org/doc/html/rfc8415#section-24

#[cfg(feature = "serde")]
use serde::{Deserialize, Serialize};
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum OROCode {
    ///Optional
    VendorOpts,
    SipServerD,
    SipServerA,
    DnsServers,
    DomainList,
    NisServers,
    NispServers,
    NisDomainName,
    NispDomainName,
    SntpServers,
    ///Required for Information-request
    InformationRefreshTime,
    BcmcsServerD,
    BcmcsServerA,
    GeoconfCivic,
    ClientFqdn,
    PanaAgent,
    NewPosixTimezone,
    NewTzdbTimezone,
    Mip6Hnidf,
    Mip6Vdinf,
    V6Lost,
    CapwapAcV6,
    Ipv6AddressMos,
    Ipv6FqdnMos,
    NtpServer,
    V6AccessDomain,
    SipUaCsList,
    OptBootfileUrl,
    OptBootfileParam,
    Nii,
    Geolocation,
    AftrName,
    ErpLocalDomainName,
    PdExclude,
    Mip6Idinf,
    Mip6Udinf,
    Mip6Hnp,
    Mip6Haa,
    Mip6Haf,
    RdnssSelection,
    KrbPrincipalName,
    KrbRealmName,
    KrbDefaultRealmName,
    KrbKdc,
    ///Required for Solicit
    SolMaxRt,
    ///Required for Information-request
    InfMaxRt,
    Addrsel,
    AddrselTable,
    V6PcpServer,
    Dhcp4ODhcp6Server,
    S46ContMape,
    S46ContMapt,
    S46ContLw,
    _4rd,
    _4rdMapRule,
    _4rdNonMapRule,
    DhcpCaptivePortal,
    MplParameters,
    S46Priority,
    V6Prefix64,
    IPv6AddressAndsf,
    ///Avalible for future codes.
    Unknown(u16),
}

impl From<OROCode> for u16 {
    fn from(opt: OROCode) -> Self {
        use OROCode::*;
        match opt {
            VendorOpts => 17,
            SipServerD => 21,
            SipServerA => 22,
            DnsServers => 23,
            DomainList => 24,
            NisServers => 27,
            NispServers => 28,
            NisDomainName => 29,
            NispDomainName => 30,
            SntpServers => 31,
            InformationRefreshTime => 32,
            BcmcsServerD => 33,
            BcmcsServerA => 34,
            GeoconfCivic => 36,
            ClientFqdn => 39,
            PanaAgent => 40,
            NewPosixTimezone => 41,
            NewTzdbTimezone => 42,
            Mip6Hnidf => 49,
            Mip6Vdinf => 50,
            V6Lost => 51,
            CapwapAcV6 => 52,
            Ipv6AddressMos => 54,
            Ipv6FqdnMos => 55,
            NtpServer => 56,
            V6AccessDomain => 57,
            SipUaCsList => 58,
            OptBootfileUrl => 59,
            OptBootfileParam => 60,
            Nii => 62,
            Geolocation => 63,
            AftrName => 64,
            ErpLocalDomainName => 65,
            PdExclude => 67,
            Mip6Idinf => 69,
            Mip6Udinf => 70,
            Mip6Hnp => 71,
            Mip6Haa => 72,
            Mip6Haf => 73,
            RdnssSelection => 74,
            KrbPrincipalName => 75,
            KrbRealmName => 76,
            KrbDefaultRealmName => 77,
            KrbKdc => 78,
            SolMaxRt => 82,
            InfMaxRt => 83,
            Addrsel => 84,
            AddrselTable => 85,
            V6PcpServer => 86,
            Dhcp4ODhcp6Server => 88,
            S46ContMape => 94,
            S46ContMapt => 95,
            S46ContLw => 96,
            _4rd => 97,
            _4rdMapRule => 98,
            _4rdNonMapRule => 99,
            DhcpCaptivePortal => 103,
            MplParameters => 104,
            S46Priority => 111,
            V6Prefix64 => 113,
            IPv6AddressAndsf => 143,
            Unknown(n) => n,
        }
    }
}

impl From<u16> for OROCode {
    fn from(opt: u16) -> Self {
        use OROCode::*;
        match opt {
            17 => VendorOpts,
            21 => SipServerD,
            22 => SipServerA,
            23 => DnsServers,
            24 => DomainList,
            27 => NisServers,
            28 => NispServers,
            29 => NisDomainName,
            30 => NispDomainName,
            31 => SntpServers,
            32 => InformationRefreshTime,
            33 => BcmcsServerD,
            34 => BcmcsServerA,
            36 => GeoconfCivic,
            39 => ClientFqdn,
            40 => PanaAgent,
            41 => NewPosixTimezone,
            42 => NewTzdbTimezone,
            49 => Mip6Hnidf,
            50 => Mip6Vdinf,
            51 => V6Lost,
            52 => CapwapAcV6,
            54 => Ipv6AddressMos,
            55 => Ipv6FqdnMos,
            56 => NtpServer,
            57 => V6AccessDomain,
            58 => SipUaCsList,
            59 => OptBootfileUrl,
            60 => OptBootfileParam,
            62 => Nii,
            63 => Geolocation,
            64 => AftrName,
            65 => ErpLocalDomainName,
            67 => PdExclude,
            69 => Mip6Idinf,
            70 => Mip6Udinf,
            71 => Mip6Hnp,
            72 => Mip6Haa,
            73 => Mip6Haf,
            74 => RdnssSelection,
            75 => KrbPrincipalName,
            76 => KrbRealmName,
            77 => KrbDefaultRealmName,
            78 => KrbKdc,
            82 => SolMaxRt,
            83 => InfMaxRt,
            84 => Addrsel,
            85 => AddrselTable,
            86 => V6PcpServer,
            88 => Dhcp4ODhcp6Server,
            94 => S46ContMape,
            95 => S46ContMapt,
            96 => S46ContLw,
            97 => _4rd,
            98 => _4rdMapRule,
            99 => _4rdNonMapRule,
            103 => DhcpCaptivePortal,
            104 => MplParameters,
            111 => S46Priority,
            113 => V6Prefix64,
            143 => IPv6AddressAndsf,
            n => Unknown(n),
        }
    }
}
